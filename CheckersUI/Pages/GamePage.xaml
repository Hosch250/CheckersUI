<Page
    Name="Main"
    x:Class="CheckersUI.Pages.GamePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:CheckersUI.CustomControls"
    xmlns:converters="using:CheckersUI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vms="using:CheckersUI.VMs"
    mc:Ignorable="d" d:DataContext="{d:DesignInstance vms:GamePageViewModel}">
    <Page.Resources>
        <converters:PlayerToFontWeightConverter x:Key="PlayerToFontWeight" />
        <converters:BooleanToHiddenVisibilityConverter x:Key="BoolToHiddenVisibility" />
        <converters:VariantToDisplayStringConverter x:Key="VariantToDisplayString" />
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="0" />
            <RowDefinition Height="0" />
            <RowDefinition Height="0" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="190" />
            <ColumnDefinition Width="640" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="0"
              Grid.Column="0"
              x:Name="GameStatus"
              HorizontalAlignment="Right"
              VerticalAlignment="Top"
              Height="80"
              Width="175"
              Margin="0,0,15,0"
              Padding="10,5"
              BorderBrush="Black"
              BorderThickness="1">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Border BorderThickness="0,0,0,1">
                <TextBlock FontWeight="Medium" Text="{Binding Variant, Converter={StaticResource VariantToDisplayString}}" />
            </Border>
            <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,5,0,0">
                <Image VerticalAlignment="Center" Height="15" Source="../Assets/WhiteCircle.png" />
                <TextBlock VerticalAlignment="Center"
                           Margin="5,0,0,0"
                           Text="{Binding WhiteOpponentText}"
                           FontWeight="{Binding Controller.CurrentPlayer, Converter={StaticResource PlayerToFontWeight}, ConverterParameter=White}" />
            </StackPanel>
            <StackPanel Grid.Row="2" Orientation="Horizontal">
                <Image VerticalAlignment="Center" Height="15" Source="../Assets/BlackCircle.png" />
                <TextBlock VerticalAlignment="Center"
                           Margin="5,0,0,0"
                           Text="{Binding BlackOpponentText}"
                           FontWeight="{Binding Controller.CurrentPlayer, Converter={StaticResource PlayerToFontWeight}, ConverterParameter=Black}" />
            </StackPanel>
        </Grid>
        <Border MaxHeight="641"
              MaxWidth="641"
              BorderThickness="1"
              BorderBrush="Black"
              VerticalAlignment="Top"
              Grid.Row="0"
              Grid.Column="1">
            <controls:EightPieceBoard x:Name="Board"
                                      Orientation="{Binding BoardOrientation}"
                                      Board="{Binding Controller.Board, Mode=OneWay}"
                                      SelectionChanged="EightPieceBoard_SelectionChanged"
                                      Move="{Binding MoveCommand}" />
        </Border>
        <Grid Grid.Column="2"
              Grid.Row="0"
              Height="640">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="60" />
            </Grid.RowDefinitions>
            <controls:MoveHistoryControl />
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60" />
                    <ColumnDefinition Width="60" />
                    <ColumnDefinition Width="60" />
                </Grid.ColumnDefinitions>
                <Button Background="Transparent"
                            IsEnabled="{Binding CanTakeback}"
                            Command="{Binding UndoMoveCommand}">
                    <Image Source="../Assets/undo.png" />
                </Button>
                <Button Background="Transparent"
                        Grid.Column="2"
                        Command="{Binding DisplayCreateGameCommand}"
                        Visibility="{Binding IsGameInProgress, Converter={StaticResource BoolToHiddenVisibility}}">
                    <Image Source="../Assets/plus.png" />
                </Button>
                <Button Background="Transparent"
                            Grid.Column="2"
                            Command="{Binding CancelGameCommand}"
                            Visibility="{Binding IsGameInProgress}">
                    <Image Source="../Assets/cancel.png" />
                </Button>
            </Grid>
        </Grid>
        <Grid Grid.RowSpan="4"
              Grid.ColumnSpan="3"
              VerticalAlignment="Center"
              HorizontalAlignment="Center"
              MaxWidth="500"
              Background="MintCream"
              BorderBrush="Black"
              BorderThickness="2"
              Padding="20"
              Visibility="{Binding DisplayCreateGameGrid}">
            <controls:NewGameControl />
        </Grid>
    </Grid>
    <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="Layouts">
            <VisualState x:Name="DefaultLayout">
                <VisualState.StateTriggers>
                    <AdaptiveTrigger MinWindowWidth="1005" />
                </VisualState.StateTriggers>
            </VisualState>
            <VisualState x:Name="SmallLayout">
                <VisualState.Setters>
                    <Setter Target="GameStatus.Visibility" Value="Collapsed" />
                </VisualState.Setters>
                <VisualState.StateTriggers>
                    <AdaptiveTrigger MinWindowWidth="0" />
                </VisualState.StateTriggers>
            </VisualState>
        </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
</Page>
